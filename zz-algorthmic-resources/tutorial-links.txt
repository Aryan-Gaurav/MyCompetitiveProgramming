CF resources
	https://github.com/Errichto/youtube/wiki/Learning-resources
	https://codeforces.com/blog/entry/57282



Several ppt
	https://github.com/mostafa-saad/ArabicCompetitiveProgramming


DP
	Digital DP			http://codeforces.com/blog/entry/53960
	
	DP Optimizations    https://codeforces.com/blog/entry/63823
						https://codeforces.com/blog/entry/8219        
						http://maratona.ic.unicamp.br/MaratonaVerao2017/documents/dp.pdf    
						
						https://www.youtube.com/watch?v=OrH2ah4ylv4		[long not that useful]
						
	
	Alien Trick			https://codeforces.com/blog/entry/68778		[originally https://ioinformatics.org/files/ioi2016solutions.pdf]						
						
	DP SOS              http://codeforces.com/blog/entry/45223
						https://www.geeksforgeeks.org/sum-subsets-dynamic-programming/
						https://algowarehouse.blogspot.com/2018/01/bitmask-dp-buildup-to-sos-dp-pt-2.html
	
	
	DP Siblings         https://tech.rokomari.com/where-why-and-how-to-use-sibling-dp-technique/
	
	DP Trees			https://codeforces.com/blog/entry/63257
						https://codeforces.com/blog/entry/20935
						https://codeforces.com/blog/entry/61572
	
	General				https://apps.topcoder.com/forums/?module=Thread&threadID=697369&start=0
						http://codeforces.com/blog/entry/47764
						http://codeforces.com/blog/entry/47247
						
	Hirschberg's Trick	https://www.quora.com/What-is-the-best-trick-in-dynamic-programming
						
						
	Dp trees vs Siblings (Nasser):
		DP Siblings a technique using DP on trees but it's very different technique from the regular "DP on Trees". It involves solving for a node's children prefix given we have solved previous ones.

		Let's say we have N nodes, and we want to distribute K items on the tree nodes, and we want to count the ways to do so. This is somehow hard to formulate as a regular tree dp, but instead imagine we do our state as (Node,currentChild,remaining items), and each time we decide how many items to distribute on current's node subtree, then distribute rest to "siblings".

		For example, consider the following tree attached. Initially we want to distribute 10 items on the tree. So we give 10 items to 1. The 1 then decides to give 10 items to it's first child, the first child bruteforces from 1 to 10 how many items it keeps in it's subtree, and then passes the rest to it's siblings the 3.

		The items distributed to the 2 are then forwarded to it's first child, the 4, which decides how many to keep in it's subtree, and sends the rest to the 5. 

		This keeps going recursively. The idea of siblings is that DP is kind of done on the children themselves. This technique is pretty good, but downsides is that when it appears it's more complex & usually very lengthy to code.

		Sample problem here : http://codeforces.com/problemset/problem/440/D


LiChao Tree
	Good to learn in same time of learning DP Convex hull optimization
		Mohamed Ahmed: more simpler than CHT and have nice implemenation and also have more features
	http://www.secmem.org/blog/2019/01/03/lichao-tree/		[use google translate]
		https://pastebin.com/69Czv0Y0
	https://cp-algorithms.com/geometry/convex_hull_trick.html
	

	
Math
	Möbius inversion    		http://codeforces.com/blog/entry/53925
	Dirichlet convolution		https://codeforces.com/blog/entry/54150
	Linear sieve       			http://codeforces.com/blog/entry/54090
	Sprague-Grundy      		http://codeforces.com/blog/entry/63054
								https://codeforces.com/blog/entry/63067
	Geometry Trick   			http://codeforces.com/blog/entry/61710
	Sums and Expected Value		http://codeforces.com/blog/entry/62690
								http://codeforces.com/blog/entry/62792
	FFT							https://csacademy.com/blog/fast-fourier-transform-and-variations-of-it
	
	Don't use rand(): a guide to random number generators in C++		https://codeforces.com/blog/entry/61587
	Randomized algorithms lecture, part 1 & 2							https://codeforces.com/blog/entry/71097
	Linear Recurrence and Berlekamp-Massey Algorithm					https://codeforces.com/blog/entry/61306
	Intro to Staircase Nim												https://codeforces.com/blog/entry/44651
	A Dance with Mobius Function										https://www.quora.com/q/negtyofjndusvnle/A-Dance-with-Mobius-Function
	
	Matrix Pow
		http://fusharblog.com/solving-linear-recurrence-for-programming-contest/
		https://www.quora.com/q/threadsiiithyderabad/Solving-Dynamic-Programming-with-Matrix-Exponentiation
		https://codeforces.com/blog/entry/43225
		My slides: https://github.com/mostafa-saad/ArabicCompetitiveProgramming/blob/master/04%20Math/Algorithms_Number_Theory_06_Matrix_Power_Applications.pptx
		
	Geometry book		https://codeforces.com/blog/entry/59129
	

DataStructures
	Blowing up unordered_map		http://codeforces.com/blog/entry/62393
	Implicit cartesian tree in GNU C++ STL
	
	Non-recursive Implementation of Range Queries and Modifications over Array             
		https://codeforces.com/blog/entry/1256
		
	Sack (dsu on tree)     			https://codeforces.com/blog/entry/44351
	Merge Sort Trees        		https://www.commonlounge.com/discussion/fe6ac441785c44d6a959eab662f15adc
	Wavelet Trees					https://users.dcc.uchile.cl/~jperez/papers/ioiconf16.pdf
	2D Range Update and Query      	https://codeforces.com/blog/entry/46390
	Why use Splay Trees?        	https://codeforces.com/blog/entry/63521
	
	Segment Tree
		Ji driver segment tree   			http://codeforces.com/blog/entry/56994
		Segment tree beats					http://codeforces.com/blog/entry/57319
		Efficient and easy segment trees    http://codeforces.com/blog/entry/18051
		Everything About Segment Trees      http://codeforces.com/blog/entry/15890
		
		More								http://codeforces.com/blog/entry/22616
											http://codeforces.com/blog/entry/59081
											
		Arpa's trick						https://cp-algorithms.com/data_structures/disjoint_set_union.html#arpa
											
											
	Monotonic Queue							https://medium.com/algorithms-and-leetcode/monotonic-queue-explained-with-leetcode-problems-7db7c530c1d6
	
	binary indexed tree						https://www.topcoder.com/community/competitive-programming/tutorials/binary-indexed-trees/
	
	Tournament Tree							https://www.geeksforgeeks.org/tournament-tree-and-binary-heap/
	
	Two ways to apply Mo's Algorithm on Trees		https://codeforces.com/blog/entry/68271
	
	Link-Cut			http://www.cs.cmu.edu/~sleator/papers/dynamic-trees.pdf
	
	
Graph
	Center of a graph					https://codeforces.com/blog/entry/17974
	Finding Bridges Online				https://cp-algorithms.com/graph/bridge-searching-online.html
	2SAT								https://codeforces.com/blog/entry/16205
	DFS tree and its applications		https://codeforces.com/blog/entry/68138
	Prüfer codes						https://cp-algorithms.com/graph/pruefer_code.html#toc-tgt-8
	Dominator Tree						https://codeforces.com/blog/entry/22811

Misc
	Slope Trick        		https://codeforces.com/blog/entry/47821
	Gosper's hack			https://softwareengineering.stackexchange.com/questions/67065/whats-your-favorite-bit-wise-technique
	Interactive Problems	https://codeforces.com/blog/entry/45307
	Exchange arguments (sorting with dp)         https://codeforces.com/blog/entry/63533
	Euler Tour Magic		http://codeforces.com/blog/entry/63020
		
	Blogewoosh tricks		http://codeforces.com/blog/entry/62602 (#6)		- Find more on his blog page
	General Tricks			https://codeforces.com/blog/entry/48417
	
	C++ Tricks				https://codeforces.com/blog/entry/15643
	C++11 for programming contests	https://codeforces.com/blog/entry/10124
	Competitive C++ Manifesto: A Style Guide		https://codeforces.com/blog/entry/64218
	


Books
	Competitive programming books - written by Antti Laaksonen			https://codeforces.com/blog/entry/50728
	





Misc
	Atcoder testcases		https://codeforces.com/blog/entry/46389
	Speeding Up for Naive Algorithm		https://codeforces.com/blog/entry/66279
	
	IOI output-only problems			https://codeforces.com/blog/entry/61150
										https://codeforces.com/blog/entry/53626
										
							
